@using BoardGame.Utils;
@inject GameManagerService Manager;

<div class="board">
    <CascadingValue Value="this">
        @foreach (var space in Manager.Spaces) {
            <Space SpaceModel="space" />
        }
    </CascadingValue>

    <div class="panel">
        <img class="logo" src="/images/logo.png" />
        <ul class="ranking">
        @foreach (var token in Manager.Tokens.OrderByDescending(t => t.Point)) {
            <li class="token"><span>@token.Point</span></li>
        }
        </ul>
        <Dice MoveTokenEvent="Manager.MoveToken" />
    </div>
    <Modal IsOpen="Manager.IsModalOpen" IsOpenChanged="Manager.UpdateModalState" />
</div>

@code {
    protected override void OnInitialized() {
        foreach (var token in Manager.Tokens) {
            token.SpaceIdChanged += HandleTokenPropertyChanged;
            token.PointChanged += HandleTokenPropertyChanged;
        }
    }

    /// <summary>
    /// Token의 속성이 변경되었을 때 발생된다.
    /// </summary>
    void HandleTokenPropertyChanged() {
        InvokeAsync(StateHasChanged);
    }
}